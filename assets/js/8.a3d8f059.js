(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{708:function(s,t,a){s.exports=a.p+"assets/img/ce.c7a66254.png"},709:function(s,t,a){s.exports=a.p+"assets/img/od.eaea06c2.png"},710:function(s,t,a){s.exports=a.p+"assets/img/od2.a1b64f20.png"},711:function(s,t,a){s.exports=a.p+"assets/img/od3.02db5279.png"},712:function(s,t,a){s.exports=a.p+"assets/img/attack.d9086075.png"},761:function(s,t,a){"use strict";a.r(t);var n=a(5),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("本文介绍如何攻击程序一个应用进程，包括修改内存数据，事件拦截。")]),s._v(" "),n("ul",[n("li",[s._v("通过CE、OD工具进行攻击")]),s._v(" "),n("li",[s._v("通过windows api进行攻击")])]),s._v(" "),n("p",[s._v("CE官网地址："),n("a",{attrs:{href:"https://www.cheatengine.org",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.cheatengine.org"),n("OutboundLink")],1),n("br"),s._v("\nOD官网地址："),n("a",{attrs:{href:"https://www.ollydbg.de",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.ollydbg.de"),n("OutboundLink")],1),n("br"),s._v("\n被攻击程序源码："),n("a",{attrs:{href:"https://github.com/zz-c/CMAKE/tree/main/windows_test",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/zz-c/CMAKE/tree/main/windows_test"),n("OutboundLink")],1),n("br"),s._v("\n攻击程序源码："),n("a",{attrs:{href:"https://github.com/zz-c/CMAKE/tree/main/windows_attack_test",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/zz-c/CMAKE/tree/main/windows_attack_test"),n("OutboundLink")],1)]),s._v(" "),n("h2",{attrs:{id:"ce使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ce使用"}},[s._v("#")]),s._v(" CE使用")]),s._v(" "),n("p",[s._v("找出和修改程序数据的内存地址。"),n("br"),s._v(" "),n("img",{attrs:{src:a(708),alt:"ce"}}),n("br"),s._v("\n找到变量的内存地址0x00FA7170=程序基地址+0x17170。")]),s._v(" "),n("h2",{attrs:{id:"od使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#od使用"}},[s._v("#")]),s._v(" OD使用")]),s._v(" "),n("p",[n("img",{attrs:{src:a(709),alt:"od"}})]),s._v(" "),n("h3",{attrs:{id:"修改程序数据的内存地址"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#修改程序数据的内存地址"}},[s._v("#")]),s._v(" 修改程序数据的内存地址")]),s._v(" "),n("p",[s._v("Ctrl+G 搜索需要查找的内存地址。"),n("br"),s._v("\n选择数值->右键点击->Binary->Edit。进行内存地址数值修改。"),n("br"),s._v(" "),n("img",{attrs:{src:a(710),alt:"od2"}})]),s._v(" "),n("h3",{attrs:{id:"拦截call事件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#拦截call事件"}},[s._v("#")]),s._v(" 拦截CALL事件")]),s._v(" "),n("p",[s._v("Alt+F1调出Command line。"),n("br"),s._v('\n输入 "hw ${内存地址}" 设置硬件断点，内存被修改时触发。'),n("br"),s._v(" "),n("img",{attrs:{src:a(711),alt:"od3"}}),n("br"),s._v("\n往上找到触发修改内存call函数的地址0x00FA1810。")]),s._v(" "),n("h2",{attrs:{id:"攻击程序使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#攻击程序使用"}},[s._v("#")]),s._v(" 攻击程序使用")]),s._v(" "),n("p",[n("img",{attrs:{src:a(712),alt:"attack"}})]),s._v(" "),n("h2",{attrs:{id:"源码windows-api说明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#源码windows-api说明"}},[s._v("#")]),s._v(" 源码windows api说明")]),s._v(" "),n("p",[s._v("获取窗口句柄->获取窗口进程ID->获取进程句柄->操作")]),s._v(" "),n("h3",{attrs:{id:"获取窗口句柄"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取窗口句柄"}},[s._v("#")]),s._v(" 获取窗口句柄")]),s._v(" "),n("div",{staticClass:"language-C line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[s._v("HWND "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("FindWindow")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  LPCTSTR lpClassName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//窗口类名 NULL")]),s._v("\n  LPCTSTR lpWindowName  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//窗口标题")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("div",{staticClass:"language-C line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 回调函数，枚举窗口时调用")]),s._v("\nBOOL CALLBACK "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("EnumWindowsProc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("HWND hwnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" LPARAM lParam"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" windowTitle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("256")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取窗口标题")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("GetWindowText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hwnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" windowTitle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("windowTitle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 检查标题是否包含“记事本”")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("strstr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("windowTitle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Demo Window"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"句柄: %p, 标题: %s\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" hwnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" windowTitle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 找到目标窗口，保存句柄并停止枚举")]),s._v("\n            HWND"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" pHwnd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("HWND"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("lParam"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("pHwnd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" hwnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" FALSE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 停止枚举")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" TRUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 继续枚举")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nHWND hwnd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("EnumWindows")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("EnumWindowsProc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("LPARAM"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("hwnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("h3",{attrs:{id:"获取窗口进程id"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取窗口进程id"}},[s._v("#")]),s._v(" 获取窗口进程ID")]),s._v(" "),n("div",{staticClass:"language-C line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[s._v("DWORD "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("GetWindowThreadProcessId")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  HWND hWnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// handle to window")]),s._v("\n  LPDWORD lpdwProcessId  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 指向变量的指针 用来返回进程PID")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"获取进程句柄"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取进程句柄"}},[s._v("#")]),s._v(" 获取进程句柄")]),s._v(" "),n("div",{staticClass:"language-C line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[s._v("HANDLE "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("OpenProcess")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  DWORD dwDesiredAccess"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 访问权限 标记")]),s._v("\n  BOOL bInheritHandle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false;")]),s._v("\n  DWORD dwProcessId       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// lpdwProcessId  进程ID标识")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"读指定进程内存数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#读指定进程内存数据"}},[s._v("#")]),s._v(" 读指定进程内存数据")]),s._v(" "),n("div",{staticClass:"language-C line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[s._v("BOOL "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ReadProcessMemory")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  HANDLE hProcess"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  HANDLE OpenProcess返回值")]),s._v("\n  LPCVOID lpBaseAddress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 读取 进程起始地址 基址")]),s._v("\n  LPVOID lpBuffer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 存放数据的缓冲区")]),s._v("\n  DWORD nSize"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 要读出的字节数")]),s._v("\n  LPDWORD lpNumberOfBytesRead "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 实际读出字节数")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"指定进程内存写入"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#指定进程内存写入"}},[s._v("#")]),s._v(" 指定进程内存写入")]),s._v(" "),n("div",{staticClass:"language-C line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[s._v("BOOL "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("WriteProcessMemory")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  HANDLE hProcess"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 目标进程的句柄")]),s._v("\n  LPVOID lpBaseAddress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 目标进程中的起始内存地址")]),s._v("\n  LPCVOID lpBuffer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 要写入的数据的缓冲区")]),s._v("\n  SIZE_T nSize"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 要写入的数据的大小（字节）")]),s._v("\n  SIZE_T "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("lpNumberOfBytesWritten "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 实际写入的字节数")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"远程call调用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#远程call调用"}},[s._v("#")]),s._v(" 远程CALL调用")]),s._v(" "),n("div",{staticClass:"language-C line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[s._v("HANDLE "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("CreateRemoteThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  HANDLE hProcess"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 目标进程的句柄")]),s._v("\n  LPSECURITY_ATTRIBUTES lpThreadAttributes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 线程的安全属性（通常为 NULL）")]),s._v("\n  SIZE_T dwStackSize"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 线程的栈大小（0 表示使用默认栈大小）")]),s._v("\n  LPTHREAD_START_ROUTINE lpStartAddress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 线程的启动例程（线程的入口点）")]),s._v("\n  LPVOID lpParameter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 传递给线程的参数")]),s._v("\n  DWORD dwCreationFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建标志（如 CREATE_SUSPENDED）")]),s._v("\n  LPDWORD lpThreadId           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 指向接收线程 ID 的变量的指针（可选）")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);